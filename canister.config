%% vim: ft=erlang ts=4 sw=4 et sts=4

[{canister, [
	%% This defines which nodes to automatically attempt to connect with on startup
	{default_cluster, [
		'can_1@127.0.0.1',
		'can_2@127.0.0.1',
		'can_3@127.0.0.1',
		'can_4@127.0.0.1',
		'can_5@127.0.0.1'
	]},

	%% How long should each Session survive in minutes
	{session_timeout, 20},

	%% The clearing process (that clears old sessions) runs every X minutes. How many minutes do you want between each run.
    {clear_interval, 60},

	%% Interval jitter is a bit of a randomizer that creates a randomized -/+ window between around the actual clear interval.
	%% This is generally to prevent multiple nodes clearing data at the same time (if the nodes start simultaneously)
	%% This is also in minutes
	{interval_jitter, 5},
 
	%% How long after a session has timed out to keep the record of the session in memory (just in case of a netsplit) (in minutes)
	{grace_period, 60},
	
	%% How long to wait for other servers in the cluster to respond to requests (in milliseconds)
    {remote_timeout, 2000},

	%% How long between checks to see which other canister nodes exist in the cluster (in seconds)
    {node_interval, 8}

]}].
